from pyrogram import Client, filters
import time
from apscheduler.schedulers.background import BackgroundScheduler

# üîπ –í—Å—Ç–∞–≤—å —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ (API ID, API Hash, Bot Token)
import os

api_id = int(os.getenv("API_ID"))  # –ß–∏—Ç–∞–µ–º API ID –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
api_hash = os.getenv("API_HASH")  # –ß–∏—Ç–∞–µ–º API Hash –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
bot_token = os.getenv("BOT_TOKEN")  # –ß–∏—Ç–∞–µ–º Bot Token –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è

# üîπ –°–æ–∑–¥–∞—ë–º –±–æ—Ç–∞
app = Client("my_bot", api_id=api_id, api_hash=api_hash, bot_token=bot_token)

# üîπ –•—Ä–∞–Ω–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ (–ø—Ä–æ—Å—Ç–æ–π –≤–∞—Ä–∏–∞–Ω—Ç –≤ –ø–∞–º—è—Ç–∏)
subscribers = set()

# üîπ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@app.on_message(filters.command("start"))
def start_message(client, message):
    message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ —Ä–∞–∑–≤–∏—Ç—å –º—ã—à–ª–µ–Ω–∏–µ –∏ –≤–æ—Å–ø—Ä–∏—è—Ç–∏–µ. üöÄ\n\n"
        "–ù–∞–ø–∏—à–∏ /help, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ."
    )

# üîπ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help
@app.on_message(filters.command("help"))
def help_message(client, message):
    message.reply_text(
        "‚Ñπ –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
        "/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º\n"
        "/help - –°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥\n"
        "/subscribe - –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∏–Ω—Å–∞–π—Ç—ã üì©\n"
        "/unsubscribe - –û—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç —Ä–∞—Å—Å—ã–ª–∫–∏"
    )

# üîπ –ö–æ–º–∞–Ω–¥–∞ /subscribe (–ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É)
@app.on_message(filters.command("subscribe"))
def subscribe(client, message):
    user_id = message.from_user.id
    subscribers.add(user_id)
    message.reply_text("‚úÖ –¢—ã –ø–æ–¥–ø–∏—Å–∞–ª—Å—è –Ω–∞ –µ–∂–µ–¥–Ω–µ–≤–Ω—É—é —Ä–∞—Å—Å—ã–ª–∫—É –∏–Ω—Å–∞–π—Ç–æ–≤! üì©")

# üîπ –ö–æ–º–∞–Ω–¥–∞ /unsubscribe (–æ—Ç–ø–∏—Å–∫–∞)
@app.on_message(filters.command("unsubscribe"))
def unsubscribe(client, message):
    user_id = message.from_user.id
    if user_id in subscribers:
        subscribers.remove(user_id)
        message.reply_text("‚ùå –¢—ã –æ—Ç–ø–∏—Å–∞–ª—Å—è –æ—Ç —Ä–∞—Å—Å—ã–ª–∫–∏.")
    else:
        message.reply_text("–¢—ã –Ω–µ –±—ã–ª –ø–æ–¥–ø–∏—Å–∞–Ω.")

# üîπ –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º
def send_daily_insight():
    if subscribers:
        insight = "üí° –ò–Ω—Å–∞–π—Ç –¥–Ω—è: –í—Å–µ–ª–µ–Ω–Ω–∞—è –Ω–µ —Ç–∞–∫–∞—è, –∫–∞–∫–æ–π —Ç—ã –µ—ë –≤–∏–¥–∏—à—å. –û–Ω–∞ —Ç–∞–∫–∞—è, –∫–∞–∫–æ–π —Ç—ã –µ—ë –æ—Å–æ–∑–Ω–∞—ë—à—å."
        for user_id in subscribers:
            try:
                app.send_message(user_id, insight)
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ {user_id}: {e}")

# üîπ –ó–∞–ø—É—Å–∫ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞
scheduler = BackgroundScheduler()
scheduler.add_job(send_daily_insight, "interval", hours=24)  # –ê–≤—Ç–æ—Ä–∞—Å—Å—ã–ª–∫–∞ –∫–∞–∂–¥—ã–µ 24 —á–∞—Å–∞
scheduler.start()

# üîπ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
app.run()
